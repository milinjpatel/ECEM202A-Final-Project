import os

NRF_SDK_DIR = "../nRF5_SDK_17.0.2_d674dde/"

build_str = "Compiling $TARGET from $SOURCE"

env = Environment(
    ENV={"PATH": os.environ["PATH"]},
)

env["ENV"]["TERM"] = os.environ["TERM"]

env.SetOption("num_jobs", os.cpu_count())

env["CCCOMSTR"] = build_str
env["CXXCOMSTR"] = build_str
env["ASCOMSTR"] = build_str
env["ASPPCOMSTR"] = build_str
env["LINKCOMSTR"] = "Linking $TARGET"

env["CC"] = "arm-none-eabi-gcc"
env["CXX"] = "arm-none-eabi-g++"
env["LINK"] = "arm-none-eabi-gcc"
env["AS"] = "arm-none-eabi-as"

env["BUILDERS"]["BuildHex"] = Builder(
    action="arm-none-eabi-objcopy -O ihex $SOURCE $TARGET"
)

env["LINKSCRIPT"] = "time_sync_gcc_nrf52.ld"

env["CFILESUFFIX"] = ".c"
env["OBJSUFFIX"] = ".o"
env["PROGSUFFIX"] = ".elf"

env["BUILD_DIR"] = "build/"
env["BINARY_DIR"] = env["BUILD_DIR"] + "bin/"

env["ProgramName"] = env["BINARY_DIR"] + "time_sync"
env["HexOutput"] = env["ProgramName"] + ".hex"
env["ElfOutput"] = env["ProgramName"] + env["PROGSUFFIX"]

env["CFLAGS"] = [
    "-O3",
    "-g3",
    "-DAPP_TIMER_V2",
    "-DAPP_TIMER_V2_RTC1_ENABLED",
    "-DBOARD_PCA10059",
    "-DCONFIG_GPIO_AS_PINRESET",
    "-DFLOAT_ABI_HARD",
    "-DNRF52840_XXAA",
    "-DNRF_SD_BLE_API_VERSION=7",
    "-DS140",
    "-DSOFTDEVICE_PRESENT",
    "-mcpu=cortex-m4",
    "-mthumb",
    "-mabi=aapcs",
    "-Wall",
    "-Werror",
    "-mfloat-abi=hard",
    "-mfpu=fpv4-sp-d16",
    "-ffunction-sections",
    "-fdata-sections",
    "-fno-strict-aliasing",
    "-fno-builtin",
    "-fshort-enums",
]
env["CXXFLAGS"] = env["CFLAGS"]

env["ASFLAGS"] = [
    "-g3",
    "-mcpu=cortex-m4",
    "-mthumb",
    "-mabi=aapcs",
    "-mfloat-abi=hard",
    "-mfpu=fpv4-sp-d16",
    "-DAPP_TIMER_V2",
    "-DAPP_TIMER_V2_RTC1_ENABLED",
    "-DBOARD_PCA10059",
    "-DCONFIG_GPIO_AS_PINRESET",
    "-DFLOAT_ABI_HARD",
    "-DNRF52840_XXAA",
    "-DNRF_SD_BLE_API_VERSION=7",
    "-DS140",
    "-DSOFTDEVICE_PRESENT",
]

env["LINKFLAGS"] = [
    "-O3",
    "-g3",
    "-mthumb",
    "-mabi=aapcs",
    "-L" + NRF_SDK_DIR + "modules/nrfx/mdk",
    "-T" + env["LINKSCRIPT"],
    "-Xlinker",
    "-Map=" + env["ProgramName"] + ".map",
    "-mcpu=cortex-m4",
    "-mfloat-abi=hard",
    "-mfpu=fpv4-sp-d16",
    "-Wl,--gc-sections",
    "--specs=nano.specs",
]

env["LIBS"] = ["-lc", "-lnosys", "-lm"]

SRC_FILES = [
    NRF_SDK_DIR + "modules/nrfx/mdk/gcc_startup_nrf52840.S",
    NRF_SDK_DIR + "components/libraries/log/src/nrf_log_backend_rtt.c",
    NRF_SDK_DIR + "components/libraries/log/src/nrf_log_backend_serial.c",
    NRF_SDK_DIR + "components/libraries/log/src/nrf_log_backend_uart.c",
    NRF_SDK_DIR + "components/libraries/log/src/nrf_log_default_backends.c",
    NRF_SDK_DIR + "components/libraries/log/src/nrf_log_frontend.c",
    NRF_SDK_DIR + "components/libraries/log/src/nrf_log_str_formatter.c",
    NRF_SDK_DIR + "components/libraries/button/app_button.c",
    NRF_SDK_DIR + "components/libraries/util/app_error.c",
    NRF_SDK_DIR + "components/libraries/util/app_error_handler_gcc.c",
    NRF_SDK_DIR + "components/libraries/util/app_error_weak.c",
    NRF_SDK_DIR + "components/libraries/scheduler/app_scheduler.c",
    NRF_SDK_DIR + "components/libraries/timer/app_timer2.c",
    NRF_SDK_DIR + "components/libraries/util/app_util_platform.c",
    NRF_SDK_DIR + "components/libraries/timer/drv_rtc.c",
    NRF_SDK_DIR + "components/libraries/hardfault/hardfault_implementation.c",
    NRF_SDK_DIR + "components/libraries/util/nrf_assert.c",
    NRF_SDK_DIR + "components/libraries/atomic_fifo/nrf_atfifo.c",
    NRF_SDK_DIR + "components/libraries/atomic_flags/nrf_atflags.c",
    NRF_SDK_DIR + "components/libraries/atomic/nrf_atomic.c",
    NRF_SDK_DIR + "components/libraries/balloc/nrf_balloc.c",
    NRF_SDK_DIR + "external/fprintf/nrf_fprintf.c",
    NRF_SDK_DIR + "external/fprintf/nrf_fprintf_format.c",
    NRF_SDK_DIR + "components/libraries/memobj/nrf_memobj.c",
    NRF_SDK_DIR + "components/libraries/pwr_mgmt/nrf_pwr_mgmt.c",
    NRF_SDK_DIR + "components/libraries/ringbuf/nrf_ringbuf.c",
    NRF_SDK_DIR + "components/libraries/experimental_section_vars/nrf_section_iter.c",
    NRF_SDK_DIR + "components/libraries/sortlist/nrf_sortlist.c",
    NRF_SDK_DIR + "components/libraries/strerror/nrf_strerror.c",
    NRF_SDK_DIR + "modules/nrfx/mdk/system_nrf52840.c",
    NRF_SDK_DIR + "components/boards/boards.c",
    NRF_SDK_DIR + "integration/nrfx/legacy/nrf_drv_clock.c",
    NRF_SDK_DIR + "integration/nrfx/legacy/nrf_drv_uart.c",
    NRF_SDK_DIR + "modules/nrfx/soc/nrfx_atomic.c",
    NRF_SDK_DIR + "modules/nrfx/drivers/src/nrfx_clock.c",
    NRF_SDK_DIR + "modules/nrfx/drivers/src/nrfx_gpiote.c",
    NRF_SDK_DIR + "modules/nrfx/drivers/src/prs/nrfx_prs.c",
    NRF_SDK_DIR + "modules/nrfx/drivers/src/nrfx_uart.c",
    NRF_SDK_DIR + "modules/nrfx/drivers/src/nrfx_uarte.c",
    NRF_SDK_DIR + "external/segger_rtt/SEGGER_RTT.c",
    NRF_SDK_DIR + "external/segger_rtt/SEGGER_RTT_Syscalls_GCC.c",
    NRF_SDK_DIR + "external/segger_rtt/SEGGER_RTT_printf.c",
    NRF_SDK_DIR + "components/ble/common/ble_advdata.c",
    NRF_SDK_DIR + "components/ble/common/ble_conn_params.c",
    NRF_SDK_DIR + "components/ble/common/ble_conn_state.c",
    NRF_SDK_DIR + "components/ble/common/ble_srv_common.c",
    NRF_SDK_DIR + "components/ble/nrf_ble_gatt/nrf_ble_gatt.c",
    NRF_SDK_DIR + "components/ble/nrf_ble_qwr/nrf_ble_qwr.c",
    NRF_SDK_DIR + "external/utf_converter/utf.c",
    NRF_SDK_DIR + "components/ble/ble_services/ble_lbs/ble_lbs.c",
    NRF_SDK_DIR + "components/softdevice/common/nrf_sdh.c",
    NRF_SDK_DIR + "components/softdevice/common/nrf_sdh_ble.c",
    NRF_SDK_DIR + "components/softdevice/common/nrf_sdh_soc.c",
    "main.c",
    "time_sync.c",
    "ble_time_role_service.c",
]

env["CPPPATH"] = [
    NRF_SDK_DIR + "components/nfc/ndef/generic/message",
    NRF_SDK_DIR + "components/nfc/t2t_lib",
    NRF_SDK_DIR + "components/nfc/t4t_parser/hl_detection_procedure",
    NRF_SDK_DIR + "components/ble/ble_services/ble_ancs_c",
    NRF_SDK_DIR + "components/ble/ble_services/ble_ias_c",
    NRF_SDK_DIR + "components/libraries/pwm",
    NRF_SDK_DIR + "components/libraries/usbd/class/cdc/acm",
    NRF_SDK_DIR + "components/libraries/usbd/class/hid/generic",
    NRF_SDK_DIR + "components/libraries/usbd/class/msc",
    NRF_SDK_DIR + "components/libraries/usbd/class/hid",
    NRF_SDK_DIR + "modules/nrfx/hal",
    NRF_SDK_DIR + "components/nfc/ndef/conn_hand_parser/le_oob_rec_parser",
    NRF_SDK_DIR + "components/libraries/log",
    NRF_SDK_DIR + "components/ble/ble_services/ble_gls",
    NRF_SDK_DIR + "components/libraries/fstorage",
    NRF_SDK_DIR + "components/nfc/ndef/text",
    NRF_SDK_DIR + "components/libraries/mutex",
    NRF_SDK_DIR + "components/libraries/gpiote",
    NRF_SDK_DIR + "components/libraries/bootloader/ble_dfu",
    NRF_SDK_DIR + "components/nfc/ndef/connection_handover/common",
    NRF_SDK_DIR + "components/boards",
    NRF_SDK_DIR + "components/nfc/ndef/generic/record",
    NRF_SDK_DIR + "components/nfc/t4t_parser/cc_file",
    NRF_SDK_DIR + "components/ble/ble_advertising",
    NRF_SDK_DIR + "external/utf_converter",
    NRF_SDK_DIR + "components/ble/ble_services/ble_bas_c",
    NRF_SDK_DIR + "modules/nrfx/drivers/include",
    NRF_SDK_DIR + "components/libraries/experimental_task_manager",
    NRF_SDK_DIR + "components/ble/ble_services/ble_hrs_c",
    NRF_SDK_DIR + "components/softdevice/s140/headers/nrf52",
    NRF_SDK_DIR + "components/nfc/ndef/connection_handover/le_oob_rec",
    NRF_SDK_DIR + "components/libraries/queue",
    NRF_SDK_DIR + "components/libraries/pwr_mgmt",
    NRF_SDK_DIR + "components/ble/ble_dtm",
    NRF_SDK_DIR + "components/toolchain/cmsis/include",
    NRF_SDK_DIR + "components/ble/ble_services/ble_rscs_c",
    NRF_SDK_DIR + "components/ble/common",
    NRF_SDK_DIR + "components/ble/ble_services/ble_lls",
    NRF_SDK_DIR + "components/nfc/platform",
    NRF_SDK_DIR + "components/nfc/ndef/connection_handover/ac_rec",
    NRF_SDK_DIR + "components/ble/ble_services/ble_bas",
    NRF_SDK_DIR + "components/libraries/mpu",
    NRF_SDK_DIR + "components/libraries/experimental_section_vars",
    NRF_SDK_DIR + "components/ble/ble_services/ble_ans_c",
    NRF_SDK_DIR + "components/libraries/slip",
    NRF_SDK_DIR + "components/libraries/delay",
    NRF_SDK_DIR + "components/libraries/csense_drv",
    NRF_SDK_DIR + "components/libraries/memobj",
    NRF_SDK_DIR + "components/ble/ble_services/ble_nus_c",
    NRF_SDK_DIR + "components/softdevice/common",
    NRF_SDK_DIR + "components/ble/ble_services/ble_ias",
    NRF_SDK_DIR + "components/libraries/usbd/class/hid/mouse",
    NRF_SDK_DIR + "components/libraries/low_power_pwm",
    NRF_SDK_DIR + "components/nfc/ndef/conn_hand_parser/ble_oob_advdata_parser",
    NRF_SDK_DIR + "components/ble/ble_services/ble_dfu",
    NRF_SDK_DIR + "external/fprintf",
    NRF_SDK_DIR + "components/libraries/svc",
    NRF_SDK_DIR + "components/libraries/atomic",
    NRF_SDK_DIR + "components",
    NRF_SDK_DIR + "components/libraries/scheduler",
    NRF_SDK_DIR + "components/libraries/cli",
    NRF_SDK_DIR + "components/ble/ble_services/ble_lbs",
    NRF_SDK_DIR + "components/ble/ble_services/ble_hts",
    NRF_SDK_DIR + "components/libraries/crc16",
    NRF_SDK_DIR + "components/nfc/t4t_parser/apdu",
    NRF_SDK_DIR + "components/libraries/util",
    NRF_SDK_DIR + "components/libraries/usbd/class/cdc",
    NRF_SDK_DIR + "components/libraries/csense",
    NRF_SDK_DIR + "components/libraries/balloc",
    NRF_SDK_DIR + "components/libraries/ecc",
    NRF_SDK_DIR + "components/libraries/hardfault",
    NRF_SDK_DIR + "components/ble/ble_services/ble_cscs",
    NRF_SDK_DIR + "components/libraries/hci",
    NRF_SDK_DIR + "components/libraries/timer",
    NRF_SDK_DIR + "components/softdevice/s140/headers",
    NRF_SDK_DIR + "integration/nrfx",
    NRF_SDK_DIR + "components/nfc/t4t_parser/tlv",
    NRF_SDK_DIR + "components/libraries/sortlist",
    NRF_SDK_DIR + "components/libraries/spi_mngr",
    NRF_SDK_DIR + "components/libraries/led_softblink",
    NRF_SDK_DIR + "components/nfc/ndef/conn_hand_parser",
    NRF_SDK_DIR + "components/libraries/sdcard",
    NRF_SDK_DIR + "components/nfc/ndef/parser/record",
    NRF_SDK_DIR + "modules/nrfx/mdk",
    NRF_SDK_DIR + "components/ble/ble_services/ble_cts_c",
    NRF_SDK_DIR + "components/ble/ble_services/ble_nus",
    NRF_SDK_DIR + "components/libraries/twi_mngr",
    NRF_SDK_DIR + "components/ble/ble_services/ble_hids",
    NRF_SDK_DIR + "components/libraries/strerror",
    NRF_SDK_DIR + "components/libraries/crc32",
    NRF_SDK_DIR + "components/nfc/ndef/connection_handover/ble_oob_advdata",
    NRF_SDK_DIR + "components/nfc/t2t_parser",
    NRF_SDK_DIR + "components/nfc/ndef/connection_handover/ble_pair_msg",
    NRF_SDK_DIR + "components/libraries/usbd/class/audio",
    NRF_SDK_DIR + "components/nfc/t4t_lib",
    NRF_SDK_DIR + "components/ble/peer_manager",
    NRF_SDK_DIR + "components/libraries/mem_manager",
    NRF_SDK_DIR + "components/libraries/ringbuf",
    NRF_SDK_DIR + "components/ble/ble_services/ble_tps",
    NRF_SDK_DIR + "components/nfc/ndef/parser/message",
    NRF_SDK_DIR + "components/ble/ble_services/ble_dis",
    NRF_SDK_DIR + "components/nfc/ndef/uri",
    NRF_SDK_DIR + "components/ble/nrf_ble_gatt",
    NRF_SDK_DIR + "components/ble/nrf_ble_qwr",
    NRF_SDK_DIR + "components/libraries/gfx",
    NRF_SDK_DIR + "components/libraries/button",
    NRF_SDK_DIR + "modules/nrfx",
    NRF_SDK_DIR + "components/libraries/twi_sensor",
    NRF_SDK_DIR + "integration/nrfx/legacy",
    NRF_SDK_DIR + "components/libraries/usbd/class/hid/kbd",
    NRF_SDK_DIR + "components/nfc/ndef/connection_handover/ep_oob_rec",
    NRF_SDK_DIR + "external/segger_rtt",
    NRF_SDK_DIR + "components/libraries/atomic_fifo",
    NRF_SDK_DIR + "components/ble/ble_services/ble_lbs_c",
    NRF_SDK_DIR + "components/nfc/ndef/connection_handover/ble_pair_lib",
    NRF_SDK_DIR + "components/libraries/crypto",
    NRF_SDK_DIR + "components/ble/ble_racp",
    NRF_SDK_DIR + "components/libraries/fds",
    NRF_SDK_DIR + "components/nfc/ndef/launchapp",
    NRF_SDK_DIR + "components/libraries/atomic_flags",
    NRF_SDK_DIR + "components/ble/ble_services/ble_hrs",
    NRF_SDK_DIR + "components/ble/ble_services/ble_rscs",
    NRF_SDK_DIR + "components/nfc/ndef/connection_handover/hs_rec",
    NRF_SDK_DIR + "components/libraries/usbd",
    NRF_SDK_DIR + "components/nfc/ndef/conn_hand_parser/ac_rec_parser",
    NRF_SDK_DIR + "components/libraries/stack_guard",
    NRF_SDK_DIR + "components/libraries/log/src",
    NRF_SDK_DIR + "config",
    ".",
]

OBJ_FILES = []

for src in SRC_FILES:
    relative_obj = os.path.splitext(src)[0]
    if all([substring not in src for substring in ["main", "time_sync"]]):
        relative_obj = relative_obj[3:]
    obj = env["BUILD_DIR"] + relative_obj + env["OBJSUFFIX"]
    OBJ_FILES.append(obj)
    env.Object(obj, src)

env.Program(env["ElfOutput"], OBJ_FILES)
env.BuildHex(env["HexOutput"], env["ElfOutput"])